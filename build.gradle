/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "me.champeau.jmh" version "0.7.2"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.com.esotericsoftware.kryo
    api libs.org.slf4j.slf4j.api
    api libs.org.slf4j.slf4j.reload4j
    api libs.org.jetbrains.annotations
    testImplementation libs.org.junit.jupiter.junit.jupiter.engine
    testImplementation libs.org.junit.platform.junit.platform.runner
    testImplementation libs.org.mockito.mockito.core
}

group = 'org.cobra'
version = '1.0-SNAPSHOT'
description = 'cobra'
java.sourceCompatibility = JavaVersion.VERSION_21

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    maxParallelForks = 3
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += "--enable-preview"
    options.compilerArgs += "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED"
}

tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
    jvmArgs += "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED"
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
    jvmArgs += "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED"
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

jmh {
    warmupIterations = 2
    iterations = 5
    fork = 1
    duplicateClassesStrategy = DuplicatesStrategy.WARN
}
